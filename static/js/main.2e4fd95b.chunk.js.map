{"version":3,"sources":["components/ProjectCard/ProjectCard.tsx","components/Projects/Projects.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProjectCard","Grid","container","spacing","item","style","width","maxWidth","Link","href","this","props","url","color","src","previewImagePath","alt","title","description","Component","Projects","projectCards","ProjectsData","projects","map","data","i","icon","height","getIconByTitle","xs","iconSize","App","textAlign","borderRadius","fontSize","Divider","variant","light","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e4fd95b.chunk.js","sourcesContent":["\nimport { Grid, Link } from '@material-ui/core';\nimport React, { Component } from 'react';\nclass ProjectCard extends Component<{ title: string, description: string, url: string, previewImagePath: string, icon: JSX.Element }, {}> {\n    public render() {\n        return <div >\n            <Grid container spacing={3}>\n                <Grid item style={{ width: '40%', maxWidth: '200px' }}>\n                    <Link href={this.props.url} color='inherit' ><img src={this.props.previewImagePath} alt=\"\" width={'100%'} /></Link>\n                </Grid>\n                <Grid item style={{ width: '60%' }}>\n                    <div><Link href={this.props.url} style={{ color: '#90caf9' }}><b>{this.props.title}</b></Link></div>\n                    <p>{this.props.description}</p>\n                </Grid>\n            </Grid>\n        </div>;\n    }\n\n\n}\n\nexport default ProjectCard;\n\n","import React from 'react';\nimport ProjectCard from '../ProjectCard/ProjectCard';\n\nimport AppsIcon from '@material-ui/icons/Apps';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport SportsGolfIcon from '@material-ui/icons/SportsGolf';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport WavesIcon from '@material-ui/icons/Waves';\n\nimport ProjectsData from './ProjectsCardData.json'\nimport { Grid } from '@material-ui/core';\n\nfunction Projects() {\n    const projectsData = ProjectsData;\n    const getIconByTitle = (title: string) => {\n        switch (title) {\n            case \"Sudoku Solver\":\n                return <AppsIcon style={{ width: '100%', height: '100%' }}></AppsIcon>\n            case \"Financial Planner\":\n                return <TrendingUpIcon style={{ width: '100%', height: '100%' }}></TrendingUpIcon>\n            case \"Course Analysis\":\n                return <SportsGolfIcon style={{ width: '100%', height: '100%' }}></SportsGolfIcon>\n            case \"Fast Feed\":\n                return <FlashOnIcon style={{ width: '100%', height: '100%' }}></FlashOnIcon>\n            case \"Up And Down The River\":\n                return <WavesIcon style={{ width: '100%', height: '100%' }}></WavesIcon>\n            default:\n                return <AppsIcon style={{ width: '100%', height: '100%' }}></AppsIcon>\n        }\n    };\n    const projectCards = projectsData.projects.map((data, i) => {\n        const icon = getIconByTitle(data.title);\n        return (\n            <Grid key={'card' + i} container spacing={3}>\n                <Grid item xs={1}>\n                    {/* Padding */}\n                </Grid>\n                <Grid item xs={10}>\n                    <ProjectCard title={data.title} description={data.description} url={data.url} previewImagePath={data.previewImagePath} icon={icon}></ProjectCard>\n                </Grid>\n                <Grid item xs={1}>\n                    {/* Padding */}\n                </Grid>\n            </Grid>\n        );\n    })\n    return (\n        <div>\n            {projectCards}\n        </div >\n    );\n}\n\n\nexport default Projects;\n\n","import { Divider, Grid, Link } from '@material-ui/core';\nimport React from 'react';\nimport './App.css';\nimport Projects from './components/Projects/Projects';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport FacebookIcon from '@material-ui/icons/Facebook';\n\nconst iconSize = \"large\"\nfunction App() {\n  return (\n    <div>\n      <div style={{ height: 50 }}>\n        {/* Vertical spacing */}\n      </div>\n      <div style={{ textAlign: 'center' }}>\n        {/* Container for my profile */}\n        <div>\n          <Grid container spacing={3}>\n            <Grid item xs={2}>\n              {/* Padding */}\n            </Grid>\n            <Grid item xs={8}>\n              <div><img src=\"images/Headshot.jpg\" alt=\"\" style={{ borderRadius: '50%', maxWidth: '200px' }} ></img></div>\n              <h1>Cole Gannaway</h1>\n              <p>{'Graduated from the University of Alabama with a Bachelor of Science degree in Computer Science & Software Engineering.'}</p>\n              <p>{'Interests include but are not limited to Cloud Computing, High Performance Computing, and Web Development.'}</p>\n              <p>{'Projects include parallelized scalable Sudoku Solver, graphically analyzed Financial Planner, and Cloud-Based Gaming Platform.'}</p>\n              <Grid container spacing={3}>\n                <Grid item xs={2}>\n                  {/* Padding */}\n                </Grid>\n                <Grid container item xs={8}>\n                  <Grid item xs>\n                    <Link color='inherit' style={{ color: '#90caf9' }} href=\"https://github.com/cole-gannaway\"><GitHubIcon fontSize={iconSize} /></Link>\n                  </Grid>\n                  <Grid item xs>\n                    <Link color='inherit' style={{ color: '#90caf9' }} href=\"https://www.linkedin.com/in/cole-gannaway/\"><LinkedInIcon fontSize={iconSize} /></Link>\n                  </Grid>\n                  <Grid item xs>\n                    <Link color='inherit' style={{ color: '#90caf9' }} href=\"https://www.facebook.com/cole.gannaway\"><FacebookIcon fontSize={iconSize} /></Link>\n                  </Grid>\n                </Grid>\n                <Grid item xs={2}>\n                  {/* Padding */}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={2}>\n              {/* Padding */}\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n      <div style={{ height: 50 }}>\n        {/* Vertical spacing */}\n      </div>\n      <Divider variant=\"middle\" light={true} style={{ backgroundColor: 'white' }} />\n      <Grid container spacing={3}>\n        <Grid item xs={1}>\n          {/* Padding */}\n        </Grid>\n        <Grid item xs={8}>\n          <h1>Projects</h1>\n        </Grid>\n        <Grid item xs={1}>\n          {/* Padding */}\n        </Grid>\n      </Grid>\n      <div style={{ textAlign: 'center' }}>\n      </div>\n      <Projects></Projects>\n      <div style={{ height: 50 }}>\n        {/* Vertical spacing */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}